"""empty message

Revision ID: 7ff5076e86e6
Revises: 
Create Date: 2025-05-10 02:39:34.839740

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7ff5076e86e6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('proxy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('picture', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fb_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expiry', sa.DateTime(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commentprocess',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=True),
    sa.Column('interval_range_start', sa.Integer(), nullable=True),
    sa.Column('interval_range_end', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'error', 'queued', 'success', 'running', 'published', name='status'), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('use_ai', sa.Boolean(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fbid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('page',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fbid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postprocess',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=True),
    sa.Column('interval_range_start', sa.Integer(), nullable=True),
    sa.Column('interval_range_end', sa.Integer(), nullable=True),
    sa.Column('use_ai', sa.Boolean(), nullable=False),
    sa.Column('ai_model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'error', 'queued', 'success', 'running', 'published', name='status'), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('proxy_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['proxy_id'], ['proxy.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reactionprocess',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=True),
    sa.Column('interval_range_start', sa.Integer(), nullable=True),
    sa.Column('interval_range_end', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'error', 'queued', 'success', 'running', 'published', name='status'), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type_of', sa.Enum('like', 'love', 'care', 'angry', 'haha', 'sad', 'random', name='reactiontype'), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('use_ai', sa.Boolean(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fb_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'error', 'queued', 'success', 'running', 'published', name='status'), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['commentprocess.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commentprocessuserlink',
    sa.Column('comment_process_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_process_id'], ['commentprocess.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('comment_process_id', 'user_id')
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('target', sa.Enum('page', 'group', name='posttarget'), nullable=False),
    sa.Column('target_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fb_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'error', 'queued', 'success', 'running', 'published', name='status'), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('proxy_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['process_id'], ['postprocess.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['proxy_id'], ['proxy.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postprocessgrouplink',
    sa.Column('post_process_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['post_process_id'], ['postprocess.id'], ),
    sa.PrimaryKeyConstraint('post_process_id', 'group_id')
    )
    op.create_table('postprocesspagelink',
    sa.Column('post_process_id', sa.Integer(), nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.ForeignKeyConstraint(['post_process_id'], ['postprocess.id'], ),
    sa.PrimaryKeyConstraint('post_process_id', 'page_id')
    )
    op.create_table('reaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_of', sa.Enum('like', 'love', 'care', 'angry', 'haha', 'sad', 'random', name='reactiontype'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'error', 'queued', 'success', 'running', 'published', name='status'), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['process_id'], ['reactionprocess.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reactionprocessuserlink',
    sa.Column('reaction_process_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reaction_process_id'], ['reactionprocess.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('reaction_process_id', 'user_id')
    )
    op.create_table('media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type_of', sa.Enum('image', 'video', 'gif', 'link', name='mediatype'), nullable=False),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['process_id'], ['postprocess.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('media')
    op.drop_table('reactionprocessuserlink')
    op.drop_table('reaction')
    op.drop_table('postprocesspagelink')
    op.drop_table('postprocessgrouplink')
    op.drop_table('post')
    op.drop_table('commentprocessuserlink')
    op.drop_table('comment')
    op.drop_table('reactionprocess')
    op.drop_table('postprocess')
    op.drop_table('page')
    op.drop_table('group')
    op.drop_table('commentprocess')
    op.drop_table('user')
    op.drop_table('proxy')
    # ### end Alembic commands ###
